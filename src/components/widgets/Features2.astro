---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import ItemGrid2 from '~/components/ui/ItemGrid2.astro';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  items = [],
  columns = 3,
  defaultIcon,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />
  <ItemGrid2
    items={items}
    columns={columns}
    defaultIcon={defaultIcon}
    classes={{
      container: 'gap-4 md:gap-6',
      panel:
        'rounded-lg shadow-[0_4px_30px_rgba(0,0,0,0.1)] dark:shadow-[0_4px_30px_rgba(0,0,0,0.1)] backdrop-blur border border-[#ffffff29] bg-white dark:bg-slate-900 p-6',
      icon: 'w-12 h-12 mb-6 text-primary',
      ...((classes?.items as Record<string, never>) ?? {}),
    }}
  >
    <ul>
      {items.map((item) => (
        <li key={item.title} class="flex flex-col items-start">
          <h3 class="text-lg font-semibold">{item.title}</h3>
          <p class="text-sm">
            {item.link ? (
              <a href={item.link} target="_blank" rel="noopener noreferrer" class="text-primary">
                {item.description}
              </a>
            ) : (
              item.description
            )}
          </p>
          <i class={`ti-${item.icon} w-12 h-12 mb-6 text-primary`}></i>  <!-- Directly render icon with classes -->
        </li>
      ))}
    </ul>
  </ItemGrid2>
</WidgetWrapper>